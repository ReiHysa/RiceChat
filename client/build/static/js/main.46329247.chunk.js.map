{"version":3,"sources":["helpers/auth.js","components/FormInput.js","helpers/api.js","pages/Login.js","pages/Register.js","components/CreateChat.js","components/Header.js","components/UserChats.js","pages/Home.js","components/Messages.js","pages/ChatPage.js","App.js","index.js"],"names":["getToken","window","localStorage","getItem","getId","FormInput","name","type","placeholder","data","handleFormChange","className","id","value","onChange","fetchAllUsers","a","config","method","url","headers","axios","response","deleteMessage","deleteAChat","fetchAllChats","fetchUserChats","chats","fetchChat","fetchAllMessages","postMessageToChat","makeAxiosRequest","createMessage","Authorization","createChat","updateChats","login","register","getAxiosRequestConfig","requestUrl","Login","setIsLoggedIn","useState","username","email","password","setData","isError","setIsError","navigate","useNavigate","useEffect","handleSubmit","event","preventDefault","then","handleSuccessfulLogin","catch","handleError","token","setItem","error","formInputProps","target","onSubmit","to","style","textDecoration","Register","password_confirmation","handleSuccessfulRegister","CreateChat","wordEntered","setWordEntered","filteredData","setFilteredData","allChats","setAllChats","allChatsTwo","setAllChatsTwo","userChats","setUserChats","otherChats","setOtherChats","console","log","length","finalValue","Number","users","setInterval","location","reload","handleFilter","searchWord","filteredUsers","filter","toLowerCase","includes","handleClick","otherId","map","onClick","Header","removeItem","UserChats","chat","ser","r","classList","chatId","confirm","Home","setChats","userId","res","f","key","Messages","message","d","Date","message_datetime","dateValue","getHours","getMinutes","messageState","setMessageState","owner","message_text","messageId","ChatPage","useParams","messages","setMessages","chatPage","setChatPage","userMessages","setUserMessages","otherMessages","setOtherMessages","messageBox","setMessageBox","everyMessage","setEveryMessage","allUserMessages","setAllUserMessages","sentMessage","setSentMessage","check","setCheck","interval","fetching","mess","clearInterval","undefined","i","push","val","handleType","App","isLoggedIn","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46329247.chunk.js","sourcesContent":["export const getToken = () => {\n  return window.localStorage.getItem(\"token\");\n};\n\nexport const setToken = (token) => {\n  window.localStorage.setItem(\"token\", token);\n};\n\nexport const removeToken = () => {\n  window.localStorage.removeItem(\"token\");\n};\n\nexport const getId = () => {\n  return window.localStorage.getItem(\"id\");\n};\n\nexport const setId = (id) => {\n  window.localStorage.setItem(\"id\", id);\n};\n\nexport const removeId = () => {\n  window.localStorage.removeItem(\"id\");\n};\n","const FormInput = ({ name, type, placeholder, data, handleFormChange }) => {\n  return (\n    <div className=\"field\">\n      <input\n        placeholder={placeholder}\n        type={type}\n        id={name}\n        name={name}\n        value={data[name]}\n        onChange={handleFormChange}\n        className=\"message-submit\"\n      />\n    </div>\n  );\n};\n\nexport default FormInput;\n","import axios from \"axios\";\nimport { getToken } from \"./auth\";\n\nexport const fetchAllUsers = async () => {\n  const config = {\n    method: \"get\",\n    url: `https://rice-chat.herokuapp.com/api/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const deleteMessage = async (id) => {\n  const config = {\n    method: \"delete\",\n    url: `https://rice-chat.herokuapp.com/api/messages/${id}/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const deleteAChat = async (id) => {\n  const config = {\n    method: \"delete\",\n    url: `https://rice-chat.herokuapp.com/api/chats/${id}/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const fetchAllChats = async () => {\n  const config = {\n    method: \"get\",\n    url: `https://rice-chat.herokuapp.com/api/chats/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const fetchUserChats = async (id) => {\n  const config = {\n    method: \"get\",\n    url: `https://rice-chat.herokuapp.com/api/${id}/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data.chats;\n};\n\nexport const fetchChat = async (id) => {\n  const config = {\n    method: \"get\",\n    url: `https://rice-chat.herokuapp.com/api/chats/${id}/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const fetchAllMessages = async () => {\n  const config = {\n    method: \"get\",\n    url: `https://rice-chat.herokuapp.com/api/messages/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const postMessageToChat = async (data, id) => {\n  return makeAxiosRequest(`chats/${id}`, data);\n};\n\nexport const createMessage = async (data) => {\n  const config = {\n    method: \"post\",\n    url: `https://rice-chat.herokuapp.com/api/messages/`,\n    headers: {\n      Authorization: `Bearer ${getToken()}`,\n      \"Content-Type\": \"application/json\",\n    },\n    data: data,\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const createChat = async (id) => {\n  const config = {\n    method: \"post\",\n    url: `https://rice-chat.herokuapp.com/api/${id}/chats/`,\n    headers: {\n      Authorization: `Bearer ${getToken()}`,\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const updateChats = async (id, data) => {\n  const config = {\n    method: \"post\",\n    url: `https://rice-chat.herokuapp.com/api/${id}/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data: data,\n  };\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const login = async (data) => {\n  return makeAxiosRequest(\"login\", data);\n};\n\nexport const register = async (data) => {\n  return makeAxiosRequest(\"register\", data);\n};\n\nexport const makeAxiosRequest = async (url, data) => {\n  const config = getAxiosRequestConfig(url, data);\n\n  const response = await axios(config);\n  return response.data;\n};\n\nexport const getAxiosRequestConfig = (requestUrl, data, method = \"post\") => {\n  const config = {\n    method,\n    url: `https://rice-chat.herokuapp.com/api/${requestUrl}/`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data: data,\n  };\n  return config;\n};\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { setToken, getToken, setId } from \"../helpers/auth\";\nimport FormInput from \"../components/FormInput\";\nimport { login } from \"../helpers/api\";\n\nconst Login = ({ setIsLoggedIn }) => {\n  const [data, setData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [isError, setIsError] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const logCheck = () => {\n      const token = getToken();\n      if (token !== null) {\n        navigate(\"/home\");\n      }\n    };\n    logCheck();\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    login(data).then(handleSuccessfulLogin).catch(handleError);\n  };\n\n  const handleSuccessfulLogin = (data) => {\n    setToken(`Bearer ${data.token}`);\n    setId(data.id);\n    setIsLoggedIn(true);\n    navigate(\"/\");\n  };\n\n  const handleError = (error) => {\n    if (error.response) {\n      setIsError(true);\n    }\n  };\n\n  const handleFormChange = (event) => {\n    const { name, value } = event.target;\n    setData({\n      ...data,\n      [name]: value,\n    });\n  };\n\n  const formInputProps = { data, handleFormChange };\n\n  return (\n    <div className=\"holder\">\n      <section className=\"login\">\n        <form onSubmit={handleSubmit} className=\"login-form\" method=\"post\">\n          <h1 className=\"title\">RiceChat</h1>\n          <FormInput\n            placeholder=\"Username\"\n            type=\"text\"\n            name=\"username\"\n            {...formInputProps}\n          />\n          <FormInput\n            placeholder=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            {...formInputProps}\n          />\n          <FormInput\n            placeholder=\"password\"\n            type=\"password\"\n            name=\"password\"\n            {...formInputProps}\n          />\n          <div className=\"sub-hold\">\n            <input type=\"submit\" value=\"Login\" className=\"submit-button\" />\n          </div>\n          <div className=\"container\">\n            <Link\n              to=\"/register\"\n              className=\"login-link a\"\n              style={{ textDecoration: \"none\" }}\n            >\n              No account? Click here to register!\n            </Link>\n          </div>\n          {isError ? (\n            <div className=\"error\">\n              <p>Error. Please try again.</p>\n            </div>\n          ) : (\n            <></>\n          )}\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { register } from \"../helpers/api\";\nimport FormInput from \"../components/FormInput\";\n\nconst Register = () => {\n  const [data, setData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  });\n\n  const [isError, setIsError] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    register(data).then(handleSuccessfulRegister).catch(handleError);\n  };\n\n  const handleSuccessfulRegister = () => {\n    setIsError(false);\n    navigate(\"/login\");\n  };\n\n  const handleError = (error) => {\n    if (error.response) {\n      setIsError(true);\n    }\n  };\n\n  const handleFormChange = (event) => {\n    const { name, value } = event.target;\n    setData({\n      ...data,\n      [name]: value,\n    });\n  };\n\n  const formInputProps = { data, handleFormChange };\n\n  return (\n    <div className=\"holder\">\n      <section className=\"login\">\n        <form onSubmit={handleSubmit} className=\"login-form reg\">\n          <h1 className=\"title\">RiceChat</h1>\n          <FormInput\n            placeholder=\"username\"\n            type=\"text\"\n            name=\"username\"\n            {...formInputProps}\n          />\n          <FormInput\n            placeholder=\"email\"\n            type=\"email\"\n            name=\"email\"\n            {...formInputProps}\n          />\n          <FormInput\n            placeholder=\"password\"\n            type=\"password\"\n            name=\"password\"\n            {...formInputProps}\n          />\n          <FormInput\n            placeholder=\"Confirm Password\"\n            type=\"password\"\n            name=\"password_confirmation\"\n            {...formInputProps}\n          />\n          <div className=\"sub-hold\">\n            <input type=\"submit\" value=\"Register\" className=\"submit-button\" />\n          </div>\n          <div className=\"container\">\n            <Link\n              to=\"/login\"\n              className=\"login-link a\"\n              style={{ textDecoration: \"none\" }}\n            >\n              Have an account? Click here to login!\n            </Link>\n          </div>\n          {isError ? (\n            <div className=\"error\">\n              <p>Error. Please try again.</p>\n            </div>\n          ) : (\n            <></>\n          )}\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchAllChats, fetchAllUsers, updateChats } from \"../helpers/api\";\nimport { createChat } from \"../helpers/api\";\nimport { getId } from \"../helpers/auth\";\n\nconst CreateChat = () => {\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [allChats, setAllChats] = useState(null);\n  const [allChatsTwo, setAllChatsTwo] = useState(null);\n  const [userChats, setUserChats] = useState(null);\n  const [otherChats, setOtherChats] = useState(null);\n\n  useEffect(() => {\n    if (allChats) {\n      fetchAllChats().then(setAllChatsTwo);\n      console.log(allChats);\n    }\n  }, [allChats]);\n  useEffect(() => {\n    if (allChatsTwo) {\n      if (allChatsTwo.length > 0) {\n        const finalValue = allChatsTwo[allChatsTwo.length - 1];\n        fetchAllChats().then(setAllChatsTwo);\n\n        updateChats(Number(getId()), Number(finalValue.id)).then(setUserChats);\n        updateChats(finalValue.users[0].id, Number(finalValue.id)).then(\n          setOtherChats\n        );\n        setInterval(() => {\n          window.location.reload();\n        }, 100);\n      }\n    }\n  }, [allChatsTwo]);\n\n  useEffect(() => {\n    if (otherChats && userChats) {\n      console.log(otherChats);\n      console.log(userChats);\n    }\n  }, [otherChats]);\n\n  const handleFilter = async (event) => {\n    const searchWord = event.target.value;\n    console.log(searchWord);\n    setWordEntered(searchWord);\n    fetchAllUsers().then((response) => {\n      const filteredUsers = response.filter((data) => {\n        return data.username.toLowerCase().includes(searchWord.toLowerCase());\n      });\n      if (searchWord === \"\") {\n        setFilteredData([]);\n      } else {\n        setFilteredData(filteredUsers);\n      }\n    });\n  };\n\n  const handleClick = (event) => {\n    const otherId = Number(event.target.id);\n    console.log(otherId);\n    createChat(otherId);\n    fetchAllChats().then(setAllChats);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"submitted\");\n  }\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"search\">\n        <div className=\"searchInput\">\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Create new chat?\"\n              value={wordEntered}\n              onChange={handleFilter}\n              className=\"searching-bar\"\n            />\n          </form>\n        </div>\n      </div>\n      <div className=\"search-results\">\n        {filteredData.length !== 0 && (\n          <div className=\"data-results\">\n            {filteredData.map((data) => {\n              return (\n                <li\n                  className=\"data-item\"\n                  onClick={handleClick}\n                  value={data}\n                  key={data.id}\n                  id={data.id}\n                >\n                  {data.username}\n                </li>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CreateChat;\n","import React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { removeId, removeToken } from \"../helpers/auth\";\n\nconst Header = () => {\n  const navigate = useNavigate();\n\n  const logout = () => {\n    removeToken();\n    removeId();\n    console.log(\"REMOVED\");\n    navigate(\"/login\");\n  };\n  return (\n    <div>\n      <ul>\n        <li onClick={logout}>Logout</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","import { getId } from \"../helpers/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { deleteAChat } from \"../helpers/api\";\n\nconst UserChats = (chat) => {\n  const navigate = useNavigate();\n\n  const ser = chat.users.filter((r) => !getId().includes(r.id));\n\n  const handleClick = (event) => {\n    navigate(`/chat/${event.target.classList[0]}`);\n  };\n\n  const deleteChat = (event) => {\n    const chatId = Number(event.target.classList[0]);\n    console.log(chatId);\n\n    const confirmation = confirm(\"You sure you want to delete this chat?\");\n\n    if (confirmation) deleteAChat(chatId);\n  };\n\n  return (\n    <div className=\"containers-container\">\n      <div className={`${chat.id} container`} onClick={handleClick}>\n        <div className={`${chat.id} group-one`}>\n          <div className={`${chat.id} circle`}></div>\n\n          <h1 className={chat.id} onClick={handleClick} id=\"chat-list-names\">\n            {ser[0].username}\n          </h1>\n        </div>\n      </div>\n      <div className={`${chat.id} delete-chat`} onClick={deleteChat}>\n        <p className={chat.id}>X</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserChats;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport CreateChat from \"../components/CreateChat\";\nimport Header from \"../components/Header\";\nimport UserChats from \"../components/UserChats\";\nimport { fetchAllChats, fetchUserChats } from \"../helpers/api\";\nimport { getId, getToken } from \"../helpers/auth\";\nimport \"../styles/Home.css\";\n\nconst Home = () => {\n  const [allChats, setAllChats] = useState(null);\n  const [allChatsTwo, setAllChatsTwo] = useState(null);\n  const [userChats, setUserChats] = useState(null);\n  const [chats, setChats] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (allChats !== null && allChatsTwo !== null) {\n      setInterval(() => {\n        fetchAllChats().then(setAllChatsTwo);\n\n        if (allChats.length !== allChatsTwo.length) {\n          window.location.reload();\n        }\n      }, 2000);\n    }\n  }, [allChatsTwo]);\n\n  const fetchCommand = () => {\n    fetchAllChats().then(setAllChats);\n    return;\n  };\n\n  useEffect(() => {\n    const logCheck = () => {\n      const token = getToken();\n      if (token === null) {\n        navigate(\"/login\");\n      }\n      fetchAllChats().then(setAllChats);\n      fetchAllChats().then(setAllChatsTwo);\n      if (!allChats) {\n        fetchCommand();\n      }\n    };\n    logCheck();\n  }, []);\n\n  useEffect(() => {\n    if (allChats) {\n      const userId = getId();\n      fetchUserChats(Number(userId)).then(setUserChats);\n    }\n  }, [allChats]);\n\n  useEffect(() => {\n    if (userChats) {\n      const res = allChats.filter((f) => userChats.includes(f.id));\n      setChats(res);\n    }\n  }, [userChats]);\n\n  return (\n    <>\n      <header>\n        <section className=\"logo\">\n          <h1>RiceChat 🍚</h1>\n        </section>\n        <Header />\n      </header>\n      <div className=\"search-div\">\n        <CreateChat />\n      </div>\n      <div className=\"complete-container\">\n        {chats ? (\n          <section className=\"chat-selector\">\n            {chats.map((chat) => (\n              <>\n                <UserChats {...chat} key={chats.id} />\n              </>\n            ))}\n          </section>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { deleteMessage } from \"../helpers/api\";\nimport { getId } from \"../helpers/auth\";\n\nconst Messages = (message) => {\n  const d = new Date(message.message_datetime);\n\n  const dateValue = `${d.getHours()} : ${d.getMinutes()}`;\n\n  const [messageState, setMessageState] = useState(null);\n\n  useEffect(() => {\n    if (message.owner.id !== Number(getId())) {\n      setMessageState(true);\n    } else {\n      setMessageState(false);\n    }\n  }, []);\n\n  const clickDeletePost = (event) => {\n    const messageId = Number(event.target.className);\n    const confirmation = confirm(\"You sure you want to delete this message?\");\n\n    if (confirmation) deleteMessage(messageId);\n  };\n\n  return (\n    <div className={`messageBox ${messageState ? \"other\" : \"\"}`}>\n      <div\n        id={message.owner.id}\n        className={`message-box-container ${messageState ? \"otherUser\" : \"\"}`}\n      >\n        <p>{message.owner.username}</p>\n        <p>{message.message_text}</p>\n        <p>{dateValue}</p>\n      </div>\n      <div className={`delete-box ${messageState ? \"other-delete\" : \"\"}`}>\n        <p className={message.id} onClick={clickDeletePost}>\n          X\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport FormInput from \"../components/FormInput\";\nimport Messages from \"../components/Messages\";\nimport { fetchAllMessages, fetchChat, postMessageToChat } from \"../helpers/api\";\nimport { createMessage } from \"../helpers/api\";\n\nimport { getId, getToken } from \"../helpers/auth\";\nimport \"../styles/Chat.css\";\nconst ChatPage = () => {\n  const { id } = useParams();\n  const [messages, setMessages] = useState(null);\n  const [chatPage, setChatPage] = useState(null);\n  const [userMessages, setUserMessages] = useState([]);\n  const [otherMessages, setOtherMessages] = useState([]);\n  const [messageBox, setMessageBox] = useState(null);\n  const userId = getId();\n\n  const [everyMessage, setEveryMessage] = useState(null);\n  const [allUserMessages, setAllUserMessages] = useState([]);\n  const [sentMessage, setSentMessage] = useState(null);\n  const navigate = useNavigate();\n  const [check, setCheck] = useState(null);\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetching = () => {\n      fetchChat(id).then(setChatPage);\n      const interval = setInterval(() => {\n        fetchChat(id).then(setCheck);\n      }, 1000);\n      return () => clearInterval(interval);\n    };\n    const logCheck = () => {\n      const token = getToken();\n      if (token === null) {\n        navigate(\"/login\");\n      }\n    };\n    logCheck();\n    fetching();\n  }, []);\n\n  useEffect(() => {\n    if (chatPage) {\n      const mess = chatPage.message;\n      setMessages(mess);\n    }\n  }, [chatPage]);\n\n  useEffect(() => {\n    if (check) {\n      if (check && messages) {\n        const interval = setInterval(() => {\n          if (check.message.length !== messages.length) {\n            window.location.reload(true);\n          }\n        }, 1000);\n\n        return () => clearInterval(interval);\n      }\n      if (messages !== null) {\n        if (messages !== undefined) {\n          setUserMessages([]);\n          setOtherMessages([]);\n          let i = 0;\n          for (i = 0; i < messages.length; i++) {\n            const owning = messages[i].owner.id;\n\n            if (owning === Number(userId)) {\n              userMessages.push(messages[i]);\n            } else {\n              otherMessages.push(messages[i]);\n            }\n          }\n        } else {\n          window.location.reload(true);\n        }\n      }\n    }\n  }, [messages, check]);\n\n  useEffect(() => {\n    if (everyMessage) {\n      setAllUserMessages([]);\n\n      let i = 0;\n      for (i = 0; i < everyMessage.length; i++) {\n        const userMessage = everyMessage[i].owner.id;\n        if (userMessage === Number(userId)) {\n          allUserMessages.push(everyMessage[i]);\n        }\n      }\n\n      if (allUserMessages.length > 0) {\n        const val = allUserMessages[allUserMessages.length - 1].id;\n        setSentMessage(val);\n      }\n    }\n  }, [everyMessage]);\n\n  useEffect(() => {\n    if (sentMessage) {\n      postMessageToChat(sentMessage, id).then(setChatPage);\n    }\n  }, [sentMessage]);\n\n  const goBack = (event) => {\n    event.preventDefault();\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (messageBox) {\n      fetchAllMessages().then(setEveryMessage);\n    }\n  }, [messageBox]);\n\n  const handleType = (event) => {\n    const { name, value } = event.target;\n    setData({\n      ...data,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createMessage(data).then(setMessageBox);\n  };\n\n  const formInputProps = { data, handleType };\n  return (\n    <div className=\"background\">\n      <button onClick={goBack} className=\"back-button\">\n        Go Back To Chats\n      </button>\n      {messages ? (\n        <>\n          {messages.map((mess) => (\n            <Messages {...mess} key={mess.id} />\n          ))}\n        </>\n      ) : (\n        <></>\n      )}\n      <form\n        onSubmit={handleSubmit}\n        onChange={handleType}\n        className=\"message-form\"\n      >\n        <FormInput\n          placeholder=\"Type message\"\n          type=\"text\"\n          name=\"message_text\"\n          {...formInputProps}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default ChatPage;\n","import React from \"react\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { getToken } from \"./helpers/auth\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport ChatPage from \"./pages/ChatPage\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (getToken()) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  return (\n    <Router>\n      <body>\n        <headers></headers>\n        <main>\n          <Routes>\n            <Route path=\"/chat/:id\" element={<ChatPage />} />\n            <Route\n              path=\"/login\"\n              element={\n                <Login isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n              }\n            />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/\" element={<Home />} />\n          </Routes>\n        </main>\n      </body>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}